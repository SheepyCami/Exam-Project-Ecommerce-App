{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Noroff E-Commerce",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Brand",
      "description": "Operations related to product brands"
    },
    {
      "name": "Category",
      "description": "Operations related to product categories"
    },
    {
      "name": "Product",
      "description": "Operations related to products"
    },
    {
      "name": "Order",
      "description": "Operations related to orders"
    },
    {
      "name": "User",
      "description": "Operations related to user management"
    },
    {
      "name": "Cart",
      "description": "Operations related to cart management"
    },
    {
      "name": "Review",
      "description": "Operations related to cart management"
    },
    {
      "name": "Test",
      "description": "Admin-specific operations, for testing with Jest. Use Backend routes for JSON responses."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/all": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all users (Admin only)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user details (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get user by ID (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete a user (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/role": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user role (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New user role",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/membership": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user membership (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New membership ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "membershipId": {
                  "type": "string",
                  "example": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Retrieve all available products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Create a new product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/latest": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Retrieve the latest added products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/category/{category}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Retrieve products by category.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the category to fetch products from.",
            "example": "Electronics"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Retrieve a product by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to retrieve.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update an existing product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to update.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated product data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Soft delete a product by marking it as deleted.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to delete.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}/undelete": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Restore a previously deleted product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to restore.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Retrieve all available categories.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Create a new category by Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Data to create a new category.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Retrieve a single category by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the category to fetch.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Update an existing category by its ID (Admin-only).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the category to update.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated category data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Delete a category by Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the category to delete.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "tags": [
          "Brand"
        ],
        "description": "Retrieve all available brands.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "description": "Create a new brand by Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Data to create a new brand.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBrand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "description": "Retrieve a single brand by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the brand to fetch.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Brand"
        ],
        "description": "Update an existing brand by Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the brand to update.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated brand data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "description": "Delete a brand by Admin ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Delete a brand by Admin ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can add items to cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can add items to cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addProductToCart"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Retrieve the user's cart, including items and price details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "User ID (from JWT token)",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can remove items from their cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can remove items from their cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteCartItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can update items in their cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can update items in their cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCartItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can checkout the cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Create a new order for the logged-in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Retrieve all orders for the logged-in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Fetch a specific order by its ID, including order items and associated product details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the order to fetch.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/admin/all": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Retrieve all orders for the logged-in user or admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/admin/{id}": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update the status of an order (Admin-only).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the order to update.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New status for the order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete an order (Admin-only).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the order to delete.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/memberships/": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Retrieve all memberships. Admin access required.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/memberships/users": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Retrieve all users with memberships. Admin access required.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/memberships/users/{id}": {
      "put": {
        "tags": [
          "Membership"
        ],
        "description": "Update the membership of a specific user. Admin access required.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user to update.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Membership update data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "membershipId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "description": {
                          "type": "string",
                          "example": "New membership ID"
                        },
                        "example": {
                          "type": "number",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "tags": [
          "Review"
        ],
        "description": "Retrieve all reviews for all products.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Review"
        ],
        "description": "Create or update a review for a product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Details of the review to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{productId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "description": "Retrieve all reviews for a specific product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to fetch reviews for.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "delete": {
        "tags": [
          "Review"
        ],
        "description": "Delete a product review by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The ID of the review to delete.",
            "example": 1
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Search"
        ],
        "description": "Search for products based on name, category, brand with pagination support.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "page": {
                  "example": "any"
                },
                "limit": {
                  "example": "any"
                }
              }
            },
            "description": "Name of the product to search for.",
            "required": false,
            "example": "MacBook"
          },
          {
            "name": "category",
            "in": "body",
            "description": "Category of the product to search for.",
            "required": false,
            "example": "Electronics",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "brand",
            "in": "body",
            "description": "Brand of the product to search for.",
            "required": false,
            "example": "Apple",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "page",
            "in": "body",
            "description": "The page number for pagination.",
            "required": false,
            "example": 1,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "limit",
            "in": "body",
            "description": "Number of results per page.",
            "required": false,
            "example": 10,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logout a user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "createBrand": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Name of the brand to be created."
                },
                "example": {
                  "type": "string",
                  "example": "Samsung"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateBrand": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated name of the brand."
                },
                "example": {
                  "type": "string",
                  "example": "Apple"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deleteBrand": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the brand to delete."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "id"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "createCategory": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Name of the category to be created."
                },
                "example": {
                  "type": "string",
                  "example": "Electronics"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateCategory": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated name of the category."
                },
                "example": {
                  "type": "string",
                  "example": "Home Appliances"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deleteCategory": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the category to delete."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "id"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "createOrder": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the user placing the order."
                },
                "example": {
                  "type": "number",
                  "example": 123
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "userId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateOrderStatus": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The new status of the order."
                },
                "example": {
                  "type": "string",
                  "example": "Shipped"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "status"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deleteOrder": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the order to delete."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "id"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "orderDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Order ID."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the user who placed the order."
                },
                "example": {
                  "type": "number",
                  "example": 123
                }
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The current status of the order."
                },
                "example": {
                  "type": "string",
                  "example": "Pending"
                }
              }
            },
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "description": {
                  "type": "string",
                  "example": "List of items in the order."
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            },
                            "description": {
                              "type": "string",
                              "example": "ID of the product in the order."
                            },
                            "example": {
                              "type": "number",
                              "example": 101
                            }
                          }
                        },
                        "quantity": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            },
                            "description": {
                              "type": "string",
                              "example": "Quantity of the product."
                            },
                            "example": {
                              "type": "number",
                              "example": 2
                            }
                          }
                        },
                        "price": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number"
                            },
                            "description": {
                              "type": "string",
                              "example": "Price of the product."
                            },
                            "example": {
                              "type": "number",
                              "example": 99.99
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "totalPrice": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "description": {
                  "type": "string",
                  "example": "Total price of the order."
                },
                "example": {
                  "type": "number",
                  "example": 199.98
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                },
                "description": {
                  "type": "string",
                  "example": "Timestamp when the order was created."
                },
                "example": {
                  "type": "string",
                  "example": "2023-01-01T12:00:00Z"
                }
              }
            }
          }
        }
      }
    },
    "recalculateMembership": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the user whose membership discount is being recalculated."
                },
                "example": {
                  "type": "number",
                  "example": 123
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "userId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "latestProducts": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "array"
        },
        "description": {
          "type": "string",
          "example": "An array of the latest products added to the store."
        },
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "object"
            },
            "properties": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "integer"
                    },
                    "description": {
                      "type": "string",
                      "example": "The ID of the product"
                    },
                    "example": {
                      "type": "number",
                      "example": 1
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "description": {
                      "type": "string",
                      "example": "The name of the product"
                    },
                    "example": {
                      "type": "string",
                      "example": "Wireless Headphones"
                    }
                  }
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "description": {
                      "type": "string",
                      "example": "The product description"
                    },
                    "example": {
                      "type": "string",
                      "example": "Noise-cancelling wireless headphones."
                    }
                  }
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "number"
                    },
                    "description": {
                      "type": "string",
                      "example": "The price of the product"
                    },
                    "example": {
                      "type": "number",
                      "example": 99.99
                    }
                  }
                },
                "category": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "description": {
                      "type": "string",
                      "example": "The category of the product"
                    },
                    "example": {
                      "type": "string",
                      "example": "Electronics"
                    }
                  }
                },
                "brand": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "description": {
                      "type": "string",
                      "example": "The brand of the product"
                    },
                    "example": {
                      "type": "string",
                      "example": "Sony"
                    }
                  }
                },
                "createdAt": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "format": {
                      "type": "string",
                      "example": "date-time"
                    },
                    "description": {
                      "type": "string",
                      "example": "The date and time the product was added"
                    },
                    "example": {
                      "type": "string",
                      "example": "2023-01-01T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "addProductToCart": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "productId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the product to add to the cart."
                },
                "example": {
                  "type": "number",
                  "example": 101
                }
              }
            },
            "quantity": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Quantity of the product to add to the cart."
                },
                "example": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "productId",
            "quantity"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateCartItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "productId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the product to update in the cart."
                },
                "example": {
                  "type": "number",
                  "example": 101
                }
              }
            },
            "quantity": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Updated quantity of the product in the cart."
                },
                "example": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "productId",
            "quantity"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deleteCartItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "productId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the product to remove from the cart."
                },
                "example": {
                  "type": "number",
                  "example": 101
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "productId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "createProduct": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Name of the product."
                },
                "example": {
                  "type": "string",
                  "example": "Smartphone"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Description of the product."
                },
                "example": {
                  "type": "string",
                  "example": "A high-end smartphone with 128GB storage."
                }
              }
            },
            "price": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "description": {
                  "type": "string",
                  "example": "Price of the product."
                },
                "example": {
                  "type": "number",
                  "example": 699.99
                }
              }
            },
            "quantity": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Available quantity of the product."
                },
                "example": {
                  "type": "number",
                  "example": 50
                }
              }
            },
            "date_added": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                },
                "description": {
                  "type": "string",
                  "example": "Date the product was added."
                },
                "example": {
                  "type": "string",
                  "example": "2024-01-01"
                }
              }
            },
            "imgurl": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "URL of the product image."
                },
                "example": {
                  "type": "string",
                  "example": "https://example.com/images/product.jpg"
                }
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Status of the product (e.g., 'active', 'inactive')."
                },
                "example": {
                  "type": "string",
                  "example": "active"
                }
              }
            },
            "brandName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Name of the brand associated with the product."
                },
                "example": {
                  "type": "string",
                  "example": "Samsung"
                }
              }
            },
            "categoryName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Name of the category associated with the product."
                },
                "example": {
                  "type": "string",
                  "example": "Electronics"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "name",
            "description",
            "price",
            "quantity",
            "date_added",
            "imgurl",
            "status",
            "brandName",
            "categoryName"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateProduct": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated name of the product."
                },
                "example": {
                  "type": "string",
                  "example": "Smartphone"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated description of the product."
                },
                "example": {
                  "type": "string",
                  "example": "An updated description for the smartphone."
                }
              }
            },
            "price": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "description": {
                  "type": "string",
                  "example": "Updated price of the product."
                },
                "example": {
                  "type": "number",
                  "example": 599.99
                }
              }
            },
            "quantity": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Updated available quantity of the product."
                },
                "example": {
                  "type": "number",
                  "example": 30
                }
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated status of the product."
                },
                "example": {
                  "type": "string",
                  "example": "inactive"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "createReview": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "rating": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "Rating for the product (1-5)."
                },
                "example": {
                  "type": "number",
                  "example": 5
                }
              }
            },
            "comment": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Review comment for the product."
                },
                "example": {
                  "type": "string",
                  "example": "Excellent product!"
                }
              }
            },
            "productId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "ID of the product being reviewed."
                },
                "example": {
                  "type": "number",
                  "example": 101
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "rating",
            "comment",
            "productId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "getAllReviewsResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "array"
        },
        "description": {
          "type": "string",
          "example": "An array of all reviews across all products."
        },
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "object"
            },
            "properties": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "integer"
                    },
                    "description": {
                      "type": "string",
                      "example": "The ID of the review."
                    },
                    "example": {
                      "type": "number",
                      "example": 1
                    }
                  }
                },
                "productId": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "integer"
                    },
                    "description": {
                      "type": "string",
                      "example": "The ID of the product the review is associated with."
                    },
                    "example": {
                      "type": "number",
                      "example": 101
                    }
                  }
                },
                "userId": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "integer"
                    },
                    "description": {
                      "type": "string",
                      "example": "The ID of the user who wrote the review."
                    },
                    "example": {
                      "type": "number",
                      "example": 5
                    }
                  }
                },
                "rating": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "integer"
                    },
                    "description": {
                      "type": "string",
                      "example": "The rating given in the review (1-5)."
                    },
                    "example": {
                      "type": "number",
                      "example": 4
                    }
                  }
                },
                "comment": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "description": {
                      "type": "string",
                      "example": "The comment left by the user in the review."
                    },
                    "example": {
                      "type": "string",
                      "example": "Great product! Highly recommended."
                    }
                  }
                },
                "createdAt": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "format": {
                      "type": "string",
                      "example": "date-time"
                    },
                    "description": {
                      "type": "string",
                      "example": "The date and time when the review was created."
                    },
                    "example": {
                      "type": "string",
                      "example": "2024-01-01T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteReview": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "reviewId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "The ID of the review to delete."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "The ID of the user performing the deletion."
                },
                "example": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "reviewId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "searchProduct": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The name of the product to search for."
                },
                "example": {
                  "type": "string",
                  "example": "MacBook Pro"
                }
              }
            },
            "category": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The category of the product."
                },
                "example": {
                  "type": "string",
                  "example": "Electronics"
                }
              }
            },
            "brand": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The brand of the product."
                },
                "example": {
                  "type": "string",
                  "example": "Apple"
                }
              }
            },
            "page": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "The page number for pagination."
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "limit": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "The number of results per page."
                },
                "example": {
                  "type": "number",
                  "example": 10
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "UserRegistration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "firstname": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's first name"
                },
                "example": {
                  "type": "string",
                  "example": "John"
                }
              }
            },
            "lastname": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's last name"
                },
                "example": {
                  "type": "string",
                  "example": "Doe"
                }
              }
            },
            "username": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Username for login"
                },
                "example": {
                  "type": "string",
                  "example": "johndoe123"
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's email address"
                },
                "example": {
                  "type": "string",
                  "example": "john.doe@example.com"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Password for login"
                },
                "example": {
                  "type": "string",
                  "example": "securePassword123"
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's address"
                },
                "example": {
                  "type": "string",
                  "example": "123 Elm Street"
                }
              }
            },
            "telephone": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's contact number"
                },
                "example": {
                  "type": "string",
                  "example": "+1234567890"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "firstname",
            "lastname",
            "username",
            "email",
            "password",
            "address",
            "telephone"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "User's email address"
                },
                "example": {
                  "type": "string",
                  "example": "john.doe@example.com"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Password for login"
                },
                "example": {
                  "type": "string",
                  "example": "securePassword123"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "email",
            "password"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogoutResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Indicates the operation status"
                },
                "example": {
                  "type": "string",
                  "example": "success"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Message indicating the user was logged out successfully."
                },
                "example": {
                  "type": "string",
                  "example": "User logged out successfully"
                }
              }
            }
          }
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "firstname": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated first name of the user"
                },
                "example": {
                  "type": "string",
                  "example": "Jane"
                }
              }
            },
            "lastname": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated last name of the user"
                },
                "example": {
                  "type": "string",
                  "example": "Smith"
                }
              }
            },
            "username": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated username for login"
                },
                "example": {
                  "type": "string",
                  "example": "janesmith123"
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated email address"
                },
                "example": {
                  "type": "string",
                  "example": "jane.smith@example.com"
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated address"
                },
                "example": {
                  "type": "string",
                  "example": "456 Oak Street"
                }
              }
            },
            "telephone": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "Updated contact number"
                },
                "example": {
                  "type": "string",
                  "example": "+0987654321"
                }
              }
            }
          }
        }
      }
    },
    "UpdateUserRole": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "role": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "The new role to assign to the user"
                },
                "example": {
                  "type": "string",
                  "example": "Admin"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "role"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateUserMembership": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "membershipId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "description": {
                  "type": "string",
                  "example": "The ID of the new membership to assign to the user"
                },
                "example": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "membershipId"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}